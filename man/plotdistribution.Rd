% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{plotdistribution}
\alias{plotdistribution}
\title{Plot the empirical distribution of several estimators.}
\usage{
plotdistribution(
  df,
  type = c("box", "density", "scatter"),
  parameter_labels = NULL,
  estimator_labels = waiver(),
  truth_colour = "red",
  truth_size = 8,
  truth_line_size = NULL,
  pairs = FALSE,
  upper_triangle_plots = NULL,
  legend = TRUE,
  return_list = FALSE
)
}
\arguments{
\item{df}{a long form data frame containing fields \code{estimator}, \code{parameter}, \code{estimate}, \code{truth}, and a column (e.g., \code{replicate}) to uniquely identify each observation.}

\item{type}{string indicating whether to plot kernel density estimates for each individual parameter (\code{type = "density"}) or scatter plots for all parameter pairs (\code{type = "scatter"}).}

\item{parameter_labels}{a named vector containing parameter labels used in the plot.}

\item{truth_colour}{the colour used to denote the true parameter value.}

\item{truth_size}{the size of the point used to denote the true parameter value (applicable only for \code{type = "scatter"}).}

\item{truth_line_size}{the size of the cross-hairs used to denote the true parameter value. If \code{NULL} (default), the cross-hairs are not plotted. (applicable only for \code{type = "scatter"}).}

\item{pairs}{logical; should we combine the scatter plots into a single pairs plot (applicable only for \code{type = "scatter"})?}

\item{upper_triangle_plots}{an optional list of plots to include in the uppertriangle of the pairs plot.}

\item{legend}{Flag; should we include the legend (only applies when constructing a pairs plot)}

\item{return_list}{Flag; should the parameters be split into a list?}
}
\value{
a list of \code{'ggplot'} objects or, if \code{pairs = TRUE}, a single \code{'ggplot'}.
}
\description{
Plot the empirical distribution of several estimators.
}
\examples{
# In the following, we have two estimators and, for each parameter, 50 estimates
# from each estimator.

# Single parameter:
estimators <- c("Estimator 1", "Estimator 2")
df <- data.frame(
  estimator = estimators, truth = 0, parameter = "mu",
  estimate  = rnorm(2*50),
  replicate = rep(1:50, each = 2)
)

parameter_labels <- c("mu" = expression(mu))
estimator_labels <- c("Estimator 1" = expression(hat(theta)[1]("·")),
                      "Estimator 2" = expression(hat(theta)[2]("·")))

plotdistribution(df, parameter_labels = parameter_labels, estimator_labels = estimator_labels)
plotdistribution(df, parameter_labels = parameter_labels, type = "density")


# Two parameters:
df <- rbind(df, data.frame(
  estimator = estimators, truth = 1, parameter = "sigma",
  estimate  = rgamma(2*50, shape = 1, rate = 1),
  replicate = rep(1:50, each = 2)
))
parameter_labels <- c(parameter_labels, "sigma" = expression(sigma))
plotdistribution(df, parameter_labels = parameter_labels)
plotdistribution(df, parameter_labels = parameter_labels, type = "density")
plotdistribution(df, parameter_labels = parameter_labels, type = "scatter")


# Three parameters:
df <- rbind(df, data.frame(
  estimator = estimators, truth = 0.25, parameter = "alpha",
  estimate  = 0.5 * runif(2*50),
  replicate = rep(1:50, each = 2)
))
parameter_labels <- c(parameter_labels, "alpha" = expression(alpha))
plotdistribution(df, parameter_labels = parameter_labels)
plotdistribution(df, parameter_labels = parameter_labels, type = "density")
plotdistribution(df, parameter_labels = parameter_labels, type = "scatter")
plotdistribution(df, parameter_labels = parameter_labels, type = "scatter", pairs = TRUE)
plotdistribution(df, parameter_labels = parameter_labels, type = "scatter", pairs = TRUE, legend = FALSE)


# Pairs plot with user-specified plots in the upper triangle:
upper_triangle_plots <- lapply(1:3, function(i) {
  x = rnorm(10)
  y = rnorm(10)
  shape = sample(c("Class 1", "Class 2"), 10, replace = TRUE)
  qplot(x = x, y = y, shape = shape) +
    labs(shape = "") +
    theme_bw()
})
plotdistribution(df, parameter_labels = parameter_labels, type = "scatter", pairs = TRUE, upper_triangle_plots = upper_triangle_plots)
}
